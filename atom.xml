<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>DecodeZ</title>
  
  <subtitle>刚日读经，柔日读史</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://decodezp.github.io/"/>
  <updated>2020-10-11T06:33:41.086Z</updated>
  <id>https://decodezp.github.io/</id>
  
  <author>
    <name>Pan Zhang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>蝴蝶泉</title>
    <link href="https://decodezp.github.io/2020/10/11/thoughts15-butterfly-spring/"/>
    <id>https://decodezp.github.io/2020/10/11/thoughts15-butterfly-spring/</id>
    <published>2020-10-11T06:31:54.000Z</published>
    <updated>2020-10-11T06:33:41.086Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;二十年前第一次去云南，我坐了三天三夜的火车。到达昆明之后，又去了石林和大理。那时年纪尚小，又不知人文地理，自是懵懵懂懂走马观花。算到而今，能回想起来的经过十不存一。岁驰时移，所谓”彩云之南“，于我更多的只是在旅游APP填写足迹时聊以凑数。若当真讲讲心得，其实与没去过无异。&lt;/p&gt;
&lt;p&gt;不意今年双节仓促之中竟又成行。北京飞昆明，只需半天足矣；动车至大理，也不过像打车到新修的廊坊大兴机场。至此才算是真正见过了滇池和洱海。不知为何我印象中这两个都是如后海这般的“市内人造景观”，却不知即便曾目遇亲见，也可能错得离谱。唯有蝴蝶泉，久别重逢，历历如昨。&lt;br&gt;
    
    </summary>
    
    
      <category term="thoughts" scheme="https://decodezp.github.io/tags/thoughts/"/>
    
  </entry>
  
  <entry>
    <title>测来测去24:QAT使用大页hugepage</title>
    <link href="https://decodezp.github.io/2020/07/22/test24-qat-hugepage/"/>
    <id>https://decodezp.github.io/2020/07/22/test24-qat-hugepage/</id>
    <published>2020-07-22T08:45:26.000Z</published>
    <updated>2020-07-22T08:48:53.635Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;实践中，使用大页的QAT应用（尤其是Nginx)都比较稳定，已经用大页这个方法修复了很多生产环境中的疑难杂症，列举几个：&lt;br&gt;
    
    </summary>
    
      <category term="tech" scheme="https://decodezp.github.io/categories/tech/"/>
    
    
      <category term="tech" scheme="https://decodezp.github.io/tags/tech/"/>
    
  </entry>
  
  <entry>
    <title>几句话说清楚44：什么是微码Microcode</title>
    <link href="https://decodezp.github.io/2020/07/12/quickwords44-microcode/"/>
    <id>https://decodezp.github.io/2020/07/12/quickwords44-microcode/</id>
    <published>2020-07-12T06:09:31.000Z</published>
    <updated>2020-07-12T06:11:09.498Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;每当听到有人说“这个问题更新一下微码就好了”，就觉得这个哥哥怎么这么迷人，好像在哪里见过。为了也让自己变成这种迷人的哥哥，我也研究了一下到底什么是微码。&lt;br&gt;
    
    </summary>
    
      <category term="tech" scheme="https://decodezp.github.io/categories/tech/"/>
    
    
      <category term="tech" scheme="https://decodezp.github.io/tags/tech/"/>
    
      <category term="hardware" scheme="https://decodezp.github.io/tags/hardware/"/>
    
      <category term="CPU" scheme="https://decodezp.github.io/tags/CPU/"/>
    
  </entry>
  
  <entry>
    <title>毫无来由</title>
    <link href="https://decodezp.github.io/2020/07/04/thoughts14-no-reasons/"/>
    <id>https://decodezp.github.io/2020/07/04/thoughts14-no-reasons/</id>
    <published>2020-07-04T03:09:09.000Z</published>
    <updated>2020-07-18T03:30:31.364Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;如果生活中发生了一件很难解释的事情，那么这件事无论重要不重要，都会一直盘桓在我们的心里。&lt;br&gt;
    
    </summary>
    
    
      <category term="thoughts" scheme="https://decodezp.github.io/tags/thoughts/"/>
    
  </entry>
  
  <entry>
    <title>几句话说清楚43:什么是云原生Cloud Native</title>
    <link href="https://decodezp.github.io/2020/05/23/quickwords43-what-is-cloudnative/"/>
    <id>https://decodezp.github.io/2020/05/23/quickwords43-what-is-cloudnative/</id>
    <published>2020-05-23T03:43:48.000Z</published>
    <updated>2020-05-23T03:45:27.023Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;容器就是云原生？微服务就是云原生？K8S就是云原生？&lt;br&gt;
    
    </summary>
    
      <category term="tech" scheme="https://decodezp.github.io/categories/tech/"/>
    
    
      <category term="tech" scheme="https://decodezp.github.io/tags/tech/"/>
    
  </entry>
  
  <entry>
    <title>几句话说清楚42:Xeon Scalable CPU Cache Coherence处理流程(2)</title>
    <link href="https://decodezp.github.io/2020/05/14/quickwords42-cache-coherence-2/"/>
    <id>https://decodezp.github.io/2020/05/14/quickwords42-cache-coherence-2/</id>
    <published>2020-05-14T12:40:46.000Z</published>
    <updated>2020-05-14T12:41:56.437Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;在&lt;a href=&quot;https://decodezp.github.io/2020/04/17/quickwords40-cache-coherence-1/&quot;&gt;上一篇文章&lt;/a&gt;中我们介绍了在Non-inclusive缓存第一次读取的读取数据的过程。其中有几个关键点在于：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;数据不是首先进入L3缓存再进入L2缓存，而是直接进入L2缓存&lt;/li&gt;
&lt;li&gt;数据所在Cache Line的状态会被记录在它自己的Home节点的Snoop Filter中&lt;/li&gt;
&lt;li&gt;所有LLC中的数据和Snoop Filter中的数据可以涵盖此时CPU所有缓存中的数据，只是会有重复的&lt;/li&gt;
&lt;li&gt;Snoop Filter和LLC是Exclusive关系，在Snoop Filter中的数据不会同时存在于LLC中，反之亦然
    
    </summary>
    
      <category term="tech" scheme="https://decodezp.github.io/categories/tech/"/>
    
    
      <category term="tech" scheme="https://decodezp.github.io/tags/tech/"/>
    
      <category term="hardware" scheme="https://decodezp.github.io/tags/hardware/"/>
    
      <category term="CPU" scheme="https://decodezp.github.io/tags/CPU/"/>
    
  </entry>
  
  <entry>
    <title>几句话说清楚41:Xeon Scalable CPU Cache Coherence处理流程(1)</title>
    <link href="https://decodezp.github.io/2020/04/17/quickwords40-cache-coherence-1/"/>
    <id>https://decodezp.github.io/2020/04/17/quickwords40-cache-coherence-1/</id>
    <published>2020-04-17T15:52:09.000Z</published>
    <updated>2020-04-17T15:54:45.086Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;先明确一下Cache Coherence出现的原因：多核处理器中，同一段数据可能在多个私有Cache中同时存在。多CPU核需要对该数据进行读写操作，为了保证程序执行结果的正确性，这多个CPU之间需要互相“通信”才能确保自己拿来参与计算的数据是应该用的数据。&lt;br&gt;
    
    </summary>
    
      <category term="tech" scheme="https://decodezp.github.io/categories/tech/"/>
    
    
      <category term="tech" scheme="https://decodezp.github.io/tags/tech/"/>
    
      <category term="hardware" scheme="https://decodezp.github.io/tags/hardware/"/>
    
      <category term="CPU" scheme="https://decodezp.github.io/tags/CPU/"/>
    
  </entry>
  
  <entry>
    <title>几句话说清楚40:什么是Outstanding Cache Miss</title>
    <link href="https://decodezp.github.io/2020/03/12/quickwords40-outstanding-cache-miss/"/>
    <id>https://decodezp.github.io/2020/03/12/quickwords40-outstanding-cache-miss/</id>
    <published>2020-03-12T01:10:35.000Z</published>
    <updated>2020-03-12T01:11:34.747Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;在阅读CPU PMU事件文档或其他一些相关资料的时候，总是会看到”Outstanding Cache Miss”这类描述。对于Cache Miss大家应该比较熟悉，但什么叫做”Outstanding Cache Miss”就需要再作一下说明了。&lt;br&gt;
    
    </summary>
    
      <category term="tech" scheme="https://decodezp.github.io/categories/tech/"/>
    
    
      <category term="tech" scheme="https://decodezp.github.io/tags/tech/"/>
    
      <category term="hardware" scheme="https://decodezp.github.io/tags/hardware/"/>
    
      <category term="CPU" scheme="https://decodezp.github.io/tags/CPU/"/>
    
  </entry>
  
  <entry>
    <title>几句话说清楚39:什么是Snoop Filter Back Invalidation</title>
    <link href="https://decodezp.github.io/2020/02/03/quickwords39-snoopfilter-back-invalidation/"/>
    <id>https://decodezp.github.io/2020/02/03/quickwords39-snoopfilter-back-invalidation/</id>
    <published>2020-02-03T15:06:16.000Z</published>
    <updated>2020-02-03T15:11:22.743Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://decodezp.github.io/2019/12/23/quickwords37-skylake-cache-snoop-filter/&quot;&gt;前面&lt;/a&gt;提到了Skylake的CPU对缓存的结构进行了一番改动，L2和L3缓存从Inclusive的关系变为了Non-inclusive。这个变化就引入了Skylake中专用的Snoop Filter。和所有Snoop Filter一样，都是服务于MESI协议，探测一下同一条Cache Line在不同的CPU核中的状态。&lt;br&gt;
    
    </summary>
    
      <category term="tech" scheme="https://decodezp.github.io/categories/tech/"/>
    
    
      <category term="tech" scheme="https://decodezp.github.io/tags/tech/"/>
    
      <category term="CPU" scheme="https://decodezp.github.io/tags/CPU/"/>
    
  </entry>
  
  <entry>
    <title>北魏司徒东郡公崔浩教你如何忽悠领导</title>
    <link href="https://decodezp.github.io/2020/02/03/history4-cuihao/"/>
    <id>https://decodezp.github.io/2020/02/03/history4-cuihao/</id>
    <published>2020-02-03T14:51:55.000Z</published>
    <updated>2020-02-03T14:53:08.115Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;“崔浩”这个名字很普通，普通到今人还有很多人和他同名。但官拜三公的北魏东郡公崔浩并不是一个“差不多先生”。把这么普通的名字放在这么神奇的男人身上，让人在读史料的时候都能产生一种出戏的感觉。&lt;/p&gt;
&lt;p&gt;说实话，崔浩当上北魏的司徒并不是什么值得一提的事情。他本就出身高门望族，祖上也有人当过曹魏的司空，之后祖祖辈辈又在当公务员这条路上颇有家学。正遇国际形势风云变幻的乱世，国家培养个干部也不容易，有如此人才自当是要人尽其用。&lt;/p&gt;
&lt;p&gt;崔浩也没让领导们失望，历仕道武帝、明元帝和太武帝三朝，为北魏东征西讨开疆扩土立下了不世之功。除了在谋略上“自比张良”之外，崔浩还精研各类天文星象卜筮谶语等杂学，同时还喜欢对魏国臣民的价值观、世界观发表看法，《资治通鉴》载：&lt;/p&gt;
    
    </summary>
    
      <category term="history" scheme="https://decodezp.github.io/categories/history/"/>
    
    
      <category term="history" scheme="https://decodezp.github.io/tags/history/"/>
    
  </entry>
  
  <entry>
    <title>几句话说清楚38:什么是 Memory Disambiguation</title>
    <link href="https://decodezp.github.io/2020/02/03/quickwords38-memory-disambiguation/"/>
    <id>https://decodezp.github.io/2020/02/03/quickwords38-memory-disambiguation/</id>
    <published>2020-02-03T14:34:59.000Z</published>
    <updated>2020-02-03T14:38:41.003Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;首先看一下disambiguation这个单词在字典中的意思：&lt;br&gt;
    
    </summary>
    
      <category term="tech" scheme="https://decodezp.github.io/categories/tech/"/>
    
    
      <category term="tech" scheme="https://decodezp.github.io/tags/tech/"/>
    
      <category term="hardware" scheme="https://decodezp.github.io/tags/hardware/"/>
    
      <category term="CPU" scheme="https://decodezp.github.io/tags/CPU/"/>
    
  </entry>
  
  <entry>
    <title>测来测去23:i40e_vlan_tpid_set():Set switch config failed aq_err:14</title>
    <link href="https://decodezp.github.io/2020/01/06/test23-Set-switch-config-failed-aq-err/"/>
    <id>https://decodezp.github.io/2020/01/06/test23-Set-switch-config-failed-aq-err/</id>
    <published>2020-01-06T05:31:27.000Z</published>
    <updated>2020-01-03T05:34:00.838Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;把X722网卡的固件升级到4.10或4.11版本之后运行DPDK-19.02及之前的版本都会出这个问题：&lt;br&gt;
    
    </summary>
    
      <category term="tech" scheme="https://decodezp.github.io/categories/tech/"/>
    
    
      <category term="tech" scheme="https://decodezp.github.io/tags/tech/"/>
    
  </entry>
  
  <entry>
    <title>其远而无所至极</title>
    <link href="https://decodezp.github.io/2020/01/03/thoughts13-the-farthest-place/"/>
    <id>https://decodezp.github.io/2020/01/03/thoughts13-the-farthest-place/</id>
    <published>2020-01-03T12:22:25.000Z</published>
    <updated>2020-02-02T16:19:12.021Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;故事要怎么开始呢，仿佛本就没有什么开始。直到去年下半年之前，我都无法确切地说出自己要成为怎样的人。心里虽有些模模糊糊的轮廓，却没有再看清楚一点的念头，因为害怕清晰的影像反而会让自己失望。&lt;/p&gt;
&lt;p&gt;去年4月有一个很神奇的契机，成为了点燃浩浩苍穹的星火。我现在犹记得接完电话之后的那股强烈的预感。但这仍然不是故事的开始，甚至2017年12月取得那张凭证也不是开始，应该说，所有我们以为是开始的，都可以找到另外一件事，那些开始不过是这件事的结果。&lt;br&gt;
    
    </summary>
    
      <category term="thoughts" scheme="https://decodezp.github.io/categories/thoughts/"/>
    
    
      <category term="thoughts" scheme="https://decodezp.github.io/tags/thoughts/"/>
    
  </entry>
  
  <entry>
    <title>几句话说清楚37:Skylake Non-inclusive缓存和Snoop Filter的关系</title>
    <link href="https://decodezp.github.io/2019/12/23/quickwords37-skylake-cache-snoop-filter/"/>
    <id>https://decodezp.github.io/2019/12/23/quickwords37-skylake-cache-snoop-filter/</id>
    <published>2019-12-22T16:05:40.000Z</published>
    <updated>2019-12-22T16:09:17.738Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Skylake的缓存设计使用了Non-inclusive的架构设计，同时调大了L2缓存的大小。简单来说，区别就是以前从内存读入的数据会同时进入L3和L2缓存，而现在会只进入L2缓存，当该数据从L2缓存中清除的时候，才会进入L3缓存。&lt;/p&gt;
&lt;p&gt;在以前的缓存架构中，L2缓存中的数据是L3缓存数据的真子集。而Skylake的架构中，L2和L3的数据在绝大部分时间中是独占的(exclusive)的，即二者所缓存的数据没有重叠。但注意，Skylake的架构是Non-inclusive，而不是严格的exclusive，是因为当同一条Cache Line在多个CPU核的L2缓存中都存在时，L3缓存中也有该Cache Line的数据。&lt;br&gt;
    
    </summary>
    
      <category term="tech" scheme="https://decodezp.github.io/categories/tech/"/>
    
    
      <category term="tech" scheme="https://decodezp.github.io/tags/tech/"/>
    
      <category term="perf" scheme="https://decodezp.github.io/tags/perf/"/>
    
  </entry>
  
  <entry>
    <title>怎样讲一个好故事</title>
    <link href="https://decodezp.github.io/2019/12/22/thoughts12-how-to-make-a-good-story/"/>
    <id>https://decodezp.github.io/2019/12/22/thoughts12-how-to-make-a-good-story/</id>
    <published>2019-12-22T14:26:27.000Z</published>
    <updated>2019-12-22T14:28:09.705Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;   人的一切知识和学问都是从故事中获取的。讲故事不仅仅是人类传承知识和文化的手段，同时也是获得理解和支持的最有效的方式。并且，一个经过设计(Engineered)的故事具备以虚驭实的能力，这种一种让人着迷的力量。怎样讲出一个好的故事，就是这篇文章想要讲的故事。&lt;/p&gt;
&lt;p&gt;所有故事都有一个开头，这个开头的作用不在于交代背景，也不在于用离奇的描述“抓住眼球”，而在于将读者代入到故事中去。一定要出现读者所熟悉的元素、符号、场景和经历，或者没有直接出现，但能够激发读者去联想，去自己的认知库中检索和关联的意象。&lt;br&gt;
    
    </summary>
    
      <category term="thoughts" scheme="https://decodezp.github.io/categories/thoughts/"/>
    
    
      <category term="thoughts" scheme="https://decodezp.github.io/tags/thoughts/"/>
    
  </entry>
  
  <entry>
    <title>快乐清单</title>
    <link href="https://decodezp.github.io/2019/12/05/thoughts11-happiness-list/"/>
    <id>https://decodezp.github.io/2019/12/05/thoughts11-happiness-list/</id>
    <published>2019-12-04T23:08:49.000Z</published>
    <updated>2019-12-04T23:12:11.358Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;开始了一项早就打算开始的项目：把每天快乐的瞬间都记录下来。Google Drive中这个简单的Excel表格，被我命名为“快乐清单”。&lt;br&gt;
    
    </summary>
    
      <category term="thoughts" scheme="https://decodezp.github.io/categories/thoughts/"/>
    
    
      <category term="thoughts" scheme="https://decodezp.github.io/tags/thoughts/"/>
    
  </entry>
  
  <entry>
    <title>测来测去22：DPDK i40e fdir+rss+reta实现相同flow type不同input_set散列</title>
    <link href="https://decodezp.github.io/2019/11/26/test22-fdir-rss-reta/"/>
    <id>https://decodezp.github.io/2019/11/26/test22-fdir-rss-reta/</id>
    <published>2019-11-26T11:07:58.000Z</published>
    <updated>2019-11-26T11:12:07.218Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;i40e网卡，同样的flow type，比如&lt;code&gt;RTE_ETH_FLOW_NONFRAG_IPV4_UDP&lt;/code&gt;，需求是某一特定Dst Port的报文到rx队列1，某一特定Src IP + Dst IP的报文到rx队列2，或其他类似的针对相同flow type的需求。&lt;br&gt;
    
    </summary>
    
      <category term="tech" scheme="https://decodezp.github.io/categories/tech/"/>
    
    
      <category term="tech" scheme="https://decodezp.github.io/tags/tech/"/>
    
  </entry>
  
  <entry>
    <title>怎样做好市场工作</title>
    <link href="https://decodezp.github.io/2019/11/17/thoughts10-how-to-do-marketing/"/>
    <id>https://decodezp.github.io/2019/11/17/thoughts10-how-to-do-marketing/</id>
    <published>2019-11-17T09:34:32.000Z</published>
    <updated>2019-11-17T09:37:28.667Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;市场工作是提高产品价值所要进行的最重要的工作。市场工作并不是围绕产品的工作，也不是围绕客户的工作，而是围绕&lt;strong&gt;符号&lt;/strong&gt;的工作——构建关于一个特定符号的意象。这个符号代表你想要卖出去的东西，而意象的作用在于，它不会改变人们对你产品的认知，而是让人们改变对&lt;strong&gt;自我&lt;/strong&gt;的认知，即便那只是一种想象。&lt;br&gt;
    
    </summary>
    
      <category term="thoughts" scheme="https://decodezp.github.io/categories/thoughts/"/>
    
    
      <category term="thoughts" scheme="https://decodezp.github.io/tags/thoughts/"/>
    
  </entry>
  
  <entry>
    <title>QuickWords 35： Perf probe usage</title>
    <link href="https://decodezp.github.io/2019/11/07/quickwords35-perf-probe-usage/"/>
    <id>https://decodezp.github.io/2019/11/07/quickwords35-perf-probe-usage/</id>
    <published>2019-11-07T10:50:46.000Z</published>
    <updated>2019-11-07T10:55:13.411Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;查看用户空间binary/.so文件可用函数&lt;/p&gt;
&lt;p&gt;&lt;code&gt;perf probe -F -x /usr/lib64/libopenvswitch-2.so.7.0.0&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;查看可以被probe的源码行&lt;br&gt;
    
    </summary>
    
      <category term="tech" scheme="https://decodezp.github.io/categories/tech/"/>
    
    
      <category term="tech" scheme="https://decodezp.github.io/tags/tech/"/>
    
      <category term="perf" scheme="https://decodezp.github.io/tags/perf/"/>
    
  </entry>
  
  <entry>
    <title>Loadbalancer Product Trends</title>
    <link href="https://decodezp.github.io/2019/10/31/product2-loadbalancer-trends/"/>
    <id>https://decodezp.github.io/2019/10/31/product2-loadbalancer-trends/</id>
    <published>2019-10-31T11:37:18.000Z</published>
    <updated>2019-10-31T11:41:44.054Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;So what is going on? There are mainly 4 kinds of work.&lt;br&gt;
    
    </summary>
    
      <category term="tech" scheme="https://decodezp.github.io/categories/tech/"/>
    
      <category term="product" scheme="https://decodezp.github.io/categories/tech/product/"/>
    
    
      <category term="tech" scheme="https://decodezp.github.io/tags/tech/"/>
    
      <category term="product" scheme="https://decodezp.github.io/tags/product/"/>
    
      <category term="network" scheme="https://decodezp.github.io/tags/network/"/>
    
  </entry>
  
</feed>
