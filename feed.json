{"title":"DecodeZ","description":"刚日读经，柔日读史","language":null,"link":"https://decodezp.github.io","pubDate":"Sun, 24 Mar 2019 13:26:32 GMT","lastBuildDate":"Sun, 24 Mar 2019 13:49:16 GMT","generator":"hexo-generator-json-feed","webMaster":"Pan Zhang","items":[{"title":"后凉龙骧将军吕邈教你如何一本正经胡说八道","link":"https://decodezp.github.io/2019/03/24/history3-lvmiao/","description":"胡说八道容易，看起来一本正经也不难，但那都是从你自己的眼光出发。 让别人看起来同样一本正经就非常有挑战了，即便你真的是在一本正经。","pubDate":"Sun, 24 Mar 2019 13:26:32 GMT","guid":"https://decodezp.github.io/2019/03/24/history3-lvmiao/","category":"history"},{"title":"商业供稿2：网络可视化如何抵御数字化转型风险","link":"https://decodezp.github.io/2019/03/23/commerical2-visibility-digital-transform/","description":"原载于云杉网络 www.yunshan.net 微信公众号 当前，“数字化转型”已成为企业或组织绕不过去的一个话题。诚然，并非所有(云杉网络的)客户都会直接声称“我们正在数字化转型”或者“我们正在做一个数字化转型的项目”，但对IT基础设施进行敏捷性改造，提升业务灵活性和效率，已是各行各业的一致追求。","pubDate":"Sat, 23 Mar 2019 00:41:19 GMT","guid":"https://decodezp.github.io/2019/03/23/commerical2-visibility-digital-transform/","category":"commerical"},{"title":"生小猫啦","link":"https://decodezp.github.io/2019/03/20/hello-kitty/","description":"去年夏天的时候家里从地铁站门口迎来了两位新成员，蓝猫derder和他的媳妇葡萄。 我其实本意并不想养宠物的，毕竟从小到大除了养过两只乌龟之外，从来也没和动物有过什么亲密接触。养猫基本上都是张老师的主意，她从小就是养鸡小能手，还养过狗啊鱼啊刺猬啊这些，所以一直想在家里恢复一下她的童年记忆。","pubDate":"Wed, 20 Mar 2019 12:33:55 GMT","guid":"https://decodezp.github.io/2019/03/20/hello-kitty/","category":"thoughts"},{"title":"OVS-DPDK 82599 VF初始化失败诊断方法一例","link":"https://decodezp.github.io/2019/03/19/82599-vf-err-debug/","description":"问题在82599上创建了两个VF之后，各自绑定到vfio，启动DPDK时出现错误： 123PMD: eth_ixgbevf_dev_init(): VF Initialization Failure: -15EAL: Error - exiting with code: 1 Cause: Requested device 0000:01:10.0 cannot be used","pubDate":"Tue, 19 Mar 2019 12:55:24 GMT","guid":"https://decodezp.github.io/2019/03/19/82599-vf-err-debug/","category":"tech"},{"title":"几句话说清楚21：Skylake微架构(Microarchitecture)剖析(6)","link":"https://decodezp.github.io/2019/03/10/quickwords21-skylake-pipeline-6/","description":"OOO Once More这里对OOO(Out-Of-Order)乱序执行再简单讲两句。深入乱序执行的难点不在于“不按指令顺序执行”，而是如何做到“按指令顺序退出”。 这里面的关键是，所有执行过的指令都先被“缓存”起来，并不把执行之后的结果真正写到寄存器或者内存里。从用户角度看，这个指令其实并没有被“执行”，因为它没有引起任何数据方面的变化。等到它可以确定是需要被执行的指令，并且它前面的指令都已经把结果写入(commit)之后，它再去Commit。这样从用户角度看来，程序就是按照指令顺序执行了。","pubDate":"Sun, 10 Mar 2019 03:44:34 GMT","guid":"https://decodezp.github.io/2019/03/10/quickwords21-skylake-pipeline-6/","category":"tech"},{"title":"在控制台水平滚动","link":"https://decodezp.github.io/2019/03/07/terminal-horizontal-scrolling/","description":"在CLI下操作，很多时候会因为屏幕尺寸的原因导致格式化输出的字符变成一副惨不忍睹的样子。比如你在有很多CPU核的环境下打印cat /proc/interrupts的时候。 当然你可能有很多方式能够处理这种情形，比如使用awk或者重定向到某个文件再打开。","pubDate":"Thu, 07 Mar 2019 13:05:17 GMT","guid":"https://decodezp.github.io/2019/03/07/terminal-horizontal-scrolling/","category":"tech"},{"title":"商业供稿1：消除虚拟化环境网络盲点","link":"https://decodezp.github.io/2019/03/05/commerical1-eliminate-vnet-blind-spot/","description":"原载于云杉网络 www.yunshan.net 微信公众号 网络盲点是引起虚拟化环境中业务中断、服务质量下降以及遭受安全威胁的最主要原因。当公司或组织缺乏网络可见性，无法完全掌握其虚拟化环境中业务的网络运行情况时，将必然面临频繁的业务中断、客户投诉以及恶意攻击带来的损失。据Gartner预测，到2019年，实现适当的网络可见性和控制工具的60%的企业将减少三分之一的安全故障。 随着业务规模的扩大，公司和组织对网络可见性的投入亦将会持续增加。但除了购买增强网络可见性的产品和服务之外，还应针对虚拟化环境中的业务特点，从以下几个导致网络盲点的原因出发，构建完善的网络监控和安全体系。","pubDate":"Tue, 05 Mar 2019 13:23:21 GMT","guid":"https://decodezp.github.io/2019/03/05/commerical1-eliminate-vnet-blind-spot/","category":"commerical"},{"title":"几句话说清楚20：eBPF的机制","link":"https://decodezp.github.io/2019/03/01/quickwords20-ebpf-intro/","description":"怎么出来的eBPF用Linux Kernel Module来做一个类比说明eBPF诞生的目的。","pubDate":"Fri, 01 Mar 2019 13:56:23 GMT","guid":"https://decodezp.github.io/2019/03/01/quickwords20-ebpf-intro/","category":"tech"},{"title":"几句话说清楚19：描述性能优化成果的正确姿势","link":"https://decodezp.github.io/2019/02/24/quickwords19-desc-perf-improvement/","description":"从10秒到1秒周末了说点不硬的技术。","pubDate":"Sun, 24 Feb 2019 07:06:30 GMT","guid":"https://decodezp.github.io/2019/02/24/quickwords19-desc-perf-improvement/","category":"tech"},{"title":"几句话说清楚18：PCIE带宽单位GT/s到Gbps转换方法","link":"https://decodezp.github.io/2019/02/22/quickwords18-pcie-gtps-gbps/","description":"PCIE的表达方式PCIE使用GT/s这个单位表达自己的带宽，这并不是为了标新立异，而是为了更好（直接）地表达PCIE的工作方式。","pubDate":"Fri, 22 Feb 2019 13:41:22 GMT","guid":"https://decodezp.github.io/2019/02/22/quickwords18-pcie-gtps-gbps/","category":"tech"},{"title":"几句话说清楚17：用Makefile.am和configure.ac构建一个专业的Hello World","link":"https://decodezp.github.io/2019/02/21/quickwords17-makefileam-configureac/","description":"首先感谢GUN的良好教程，这里主要是做一点点加工。 GNU Autotool现在写开源项目，如果只提供一个Makefile可能会令别人怀疑你项目的专业程度:D虽然其实并没有什么关系，但看着别的项目目录下面的configure, configure.ac, Makefile.in, Makefile.am, aclocal.m4等文件还是会觉得有必要也用这些东西“装点”一下。","pubDate":"Thu, 21 Feb 2019 12:46:35 GMT","guid":"https://decodezp.github.io/2019/02/21/quickwords17-makefileam-configureac/","category":"tech"},{"title":"几句话说清楚16：如何构建零干扰CPU Benchmark环境","link":"https://decodezp.github.io/2019/02/20/quickwords16-noisy-free-benchmark-env/","description":"CPU性能测试对环境的要求即便是硬件配置完全一样，操作系统相同，工作负载也相同的硬件平台，性能测试的结果也可能会因为各项配置的不同出现较大出入。","pubDate":"Wed, 20 Feb 2019 13:07:28 GMT","guid":"https://decodezp.github.io/2019/02/20/quickwords16-noisy-free-benchmark-env/","category":"tech"},{"title":"测来测去7：筛法求素数Loop Unrolling性能优化实例","link":"https://decodezp.github.io/2019/02/19/test7-prime-opt/","description":"筛法求素数最近拿到一段筛法求素数的代码，希望能够在不改变原有算法的基础上提高性能。","pubDate":"Tue, 19 Feb 2019 11:57:18 GMT","guid":"https://decodezp.github.io/2019/02/19/test7-prime-opt/","category":"test"},{"title":"《居家男人》","link":"https://decodezp.github.io/2019/02/15/thoughts5-family-man/","description":"大约在2010年左右的时候，我会经常在PPS这种视频流软件上面看尼古拉斯凯奇的电影。他早期的一些作品还是令人印象深刻。相较于那些有名的动作片，《居家男人》应该只是一部家庭剧小品，但却成了我这些年重复播放最多的他的片子。","pubDate":"Fri, 15 Feb 2019 11:02:39 GMT","guid":"https://decodezp.github.io/2019/02/15/thoughts5-family-man/","category":"thoughts"},{"title":"几句话说清楚15：Top-Down性能分析方法资料及Toplev使用","link":"https://decodezp.github.io/2019/02/14/quickwords15-toplev/","description":"Top-down Microarchitecture Analysis Method(TMAM)资料之前介绍过TMAM的具体内容，在这里对网络上相关的信息和资料做一个汇总： Tuning Applications Using a Top-down Microarchitecture Analysis Method","pubDate":"Thu, 14 Feb 2019 11:40:58 GMT","guid":"https://decodezp.github.io/2019/02/14/quickwords15-toplev/","category":"tech"},{"title":"几句话说清楚14：Skylake微架构(Microarchitecture)剖析(5)","link":"https://decodezp.github.io/2019/02/03/quickwords14-skylake-pipeline-5/","description":"Instruction Decode Queue(IDQ)IDQ也叫Allocation Queue(AQ)，也有时候会写成是Decode Queue。解码完成的uops在进入后端之前需要先在IDQ中做一下缓冲。作为一个”缓冲队列”，主要作用是将前端解码可能引入的流水线”气泡(bubbles)“消化掉，为后端提供稳定的uops供应(目标是6uop/cycle)。","pubDate":"Sun, 03 Feb 2019 07:42:55 GMT","guid":"https://decodezp.github.io/2019/02/03/quickwords14-skylake-pipeline-5/","category":"tech"},{"title":"程序员学英语的几点实用经验","link":"https://decodezp.github.io/2019/01/31/how-to-learn-english/","description":"学习英语当然要靠不断的练习，但同样的练习时间往往效果却大相径庭。以下是我结合自己的经历总结的一些经验和方法，希望能帮助大家提高学习英语的效率。 Rubbish in, rubbish out把自己想象成一个处理英文的黑盒，输入就是听读，输出就是说写。和人工智能训练模型需要优质的标签数据一样，学习英语也需要优质的输入才能达到良好的学习效果。 在程序员的领域，最直接的优质的英文材料就是经典的英文原版技术书籍。编写这些书籍的大师不但是技术领域的巨擘，同时也是操纵语言的大师，他们的书籍往往最是简洁明快，逻辑清晰。","pubDate":"Thu, 31 Jan 2019 12:47:03 GMT","guid":"https://decodezp.github.io/2019/01/31/how-to-learn-english/","category":""},{"title":"几句话说清楚13：什么是Top-Down性能分析方法","link":"https://decodezp.github.io/2019/01/27/quickwords13-tma/","description":"目的前几篇连续介绍了一些Skylake微架构的内容（还没有结束，还会继续填坑），主要目的并不是要对读者开启名词或者概念的Flood攻击，而是为了方便读者以后可以“有理有据”地进行软件的性能优化。","pubDate":"Sun, 27 Jan 2019 13:17:45 GMT","guid":"https://decodezp.github.io/2019/01/27/quickwords13-tma/","category":"tech"},{"title":"测来测去6：Linux网络性能调优方法（补遗）","link":"https://decodezp.github.io/2019/01/24/test6-linux-network-performance-optimization-2/","description":"没提到的上一篇内容中介绍了一些Linux网络协议栈的调优方法，但遗漏了一些可以发挥重要作用的方法，在这一篇中补充一下。","pubDate":"Thu, 24 Jan 2019 10:35:31 GMT","guid":"https://decodezp.github.io/2019/01/24/test6-linux-network-performance-optimization-2/","category":"test"},{"title":"测来测去5：Linux网络性能调优方法","link":"https://decodezp.github.io/2019/01/22/test5-linux-network-performance-optimization/","description":"换换口味老搞DPDK的人有一个毛病就是怎么也看不上内核网络，又是中断又是拷贝的，实在没有一脚地板油CPU直接100%炸街来得爽快。另外作为一个软件性能优化的“硬核”玩家，是很看不上内核这种改改参数，调调设置的玩法的。不过…既然自己主动跳了个大坑，该调内核性能的时候还是要调的…所以今天就换换口味，看看在Linux下通过配置调优网络性能怎么搞。","pubDate":"Tue, 22 Jan 2019 13:06:06 GMT","guid":"https://decodezp.github.io/2019/01/22/test5-linux-network-performance-optimization/","category":"test"},{"title":"几句话说清楚12：Skylake微架构(Microarchitecture)剖析(4)","link":"https://decodezp.github.io/2019/01/20/quickwords12-skylake-pipeline-4/","description":"MSROM MSROM(Micro-code sequencer ROM)就是在上一篇连载中提到的专门处理输出大于4个uop的那块类似缓存的ROM。很多文档里面也直接将其称为MS，具体叫什么多需要结合上下文语境，知道是一回事就好了。 我个人其实推荐读者在编写自己的文档时能注意这些名称上的“一致性”，同编写程序时给变量或函数命名时的一致性一样，这些看似没什么“技术含量”的工作，却能够极大地提高信息传达的效率，也就是提高文档或代码的可读性和可维护性。","pubDate":"Sun, 20 Jan 2019 05:37:25 GMT","guid":"https://decodezp.github.io/2019/01/20/quickwords12-skylake-pipeline-4/","category":"tech"},{"title":"有时做梦","link":"https://decodezp.github.io/2019/01/19/thoughts4-dream/","description":"活得年头多起来之后，很难再明确地忆起某件事发生在哪一年。时间变得不再激烈，但往事却在交织纠缠，许多不可能的事还以为理所当然，而那些早已发生的事实却总需要确认再三。","pubDate":"Sat, 19 Jan 2019 06:08:32 GMT","guid":"https://decodezp.github.io/2019/01/19/thoughts4-dream/","category":"thoughts"},{"title":"在OpenWRT中添加perf工具","link":"https://decodezp.github.io/2019/01/15/openwrt-perf/","description":"OpenWRT性能调优的必要如果仅仅是家庭网关，确实没太大必要，毕竟网络的瓶颈主要在运营商的出口那。OpenWRT之所以开始关注极致的性能，是由于OpenWRT的应用场景出现了变化。从SD-WAN和边缘计算概念，到混合云与智能网关，都催生出了在边缘接入侧uCPE或其他类似的小盒子中部署基于OpenWRT系统的必要。不同于满足家庭接入的需求，这些小盒子往往对应一间Office或公司分支的网络需求。增长的网络带宽和对安全性、QoS等能力的要求都对OpenWRT的性能提出了更高的要求。","pubDate":"Tue, 15 Jan 2019 14:08:39 GMT","guid":"https://decodezp.github.io/2019/01/15/openwrt-perf/","category":"tech"},{"title":"王朝兴亡周期律的本因","link":"https://decodezp.github.io/2019/01/13/thoughts3-zhouqilv/","description":"王朝兴亡周期律 六位参政员将要回重庆时，毛泽东问黄炎培有什么感想，黄炎培坦率地说：“我生六十多年，耳闻的不说，所亲眼看到的，真所谓‘其兴也勃焉’，‘其亡也忽焉’，一人，一家，一团体，一地方，乃至一国，不少单位都没有跳出这周期率的支配力。大凡初时聚精会神，没有一事不用心，没有一人不卖力，也许那时艰难困苦，只有从万死中觅取一生。既而环境渐渐好转了，精神也就渐渐放下了。有的因为历史长久，自然地惰性发作，由少数演变为多数，到风气养成，虽有大力，无法扭转，并且无法补救。也有为了区域一步步扩大，它的扩大，有的出于自然发展，有的为功业欲所驱使，强求发展，到干部人才渐见竭蹶、艰于应付的时候，环境倒越加复杂起来了，控制力不免趋于薄弱了。一部历史‘政怠宦成’的也有，‘人亡政息’的也有，‘求荣取辱’的也有。总之没有能跳出这周期率。中共诸君从过去到现在，我略略了解的了。就是希望找出一条新路，来跳出这周期率的支配。”","pubDate":"Sun, 13 Jan 2019 15:50:04 GMT","guid":"https://decodezp.github.io/2019/01/13/thoughts3-zhouqilv/","category":"thoughts"},{"title":"几句话说清楚11：Skylake微架构(Microarchitecture)剖析(3)","link":"https://decodezp.github.io/2019/01/12/quickwords11-skylake-pipeline-3/","description":"解码 在拿到了经过“预解码”的macro-ops之后，开始正式进入解码过程。marco-ops进入Instruction Decode组件解码，最终的输出为定长的micro-ops。 Insturction Decode组件也有入口带宽限制，每个Cycle最多取3个unfused指令+2个fused指令，或者5个unfused指令（这里指macro ops）。所以说fused多了也不好，一个cycle最多取两个。同时如果开了Hyper Thread，则两个Thread按Cycle交替使用Instruction Decode。","pubDate":"Sat, 12 Jan 2019 04:50:46 GMT","guid":"https://decodezp.github.io/2019/01/12/quickwords11-skylake-pipeline-3/","category":"tech"}]}