{"title":"DecodeZ","description":"刚日读经，柔日读史","language":null,"link":"https://decodezp.github.io","pubDate":"Sat, 12 Oct 2019 12:33:29 GMT","lastBuildDate":"Sat, 12 Oct 2019 12:36:49 GMT","generator":"hexo-generator-json-feed","webMaster":"Pan Zhang","items":[{"title":"金罍深深酌","link":"https://decodezp.github.io/2019/10/12/leuven-mem/","description":"一2012年3月，我在布鲁塞尔南站7号站台见到了高中同学L。","pubDate":"Sat, 12 Oct 2019 12:33:29 GMT","guid":"https://decodezp.github.io/2019/10/12/leuven-mem/","category":"life"},{"title":"Shell命令行中感叹号!的运用","link":"https://decodezp.github.io/2019/09/25/exclamation-mark-shell/","description":"!!重复执行上一条命令直接输入!!，不过我更喜欢按上方向键…","pubDate":"Wed, 25 Sep 2019 12:10:27 GMT","guid":"https://decodezp.github.io/2019/09/25/exclamation-mark-shell/","category":"tech"},{"title":"热烈庆祝8总力克猫传腹病魔康复痊愈","link":"https://decodezp.github.io/2019/09/22/8-recovery/","description":"8总是今年3月出生的一只蓝白相间的英国短毛猫，因为脑袋上的蓝色花斑从中间裂开一个“八”字形的缝，因此被称为8总。","pubDate":"Sun, 22 Sep 2019 10:50:13 GMT","guid":"https://decodezp.github.io/2019/09/22/8-recovery/","category":"thoughts"},{"title":"测来测去20：快速定位short-lived进程对性能的负面影响","link":"https://decodezp.github.io/2019/09/19/test20-troubleshoot-short-lived-process/","description":"案例遇到过的一个案例是这样：DPDK应用在小流量的情况下丢包，并且是间歇性地丢。很自然的，会怀疑有其他进程抢占分配给DPDK的CPU核。","pubDate":"Wed, 18 Sep 2019 19:58:10 GMT","guid":"https://decodezp.github.io/2019/09/19/test20-troubleshoot-short-lived-process/","category":"test"},{"title":"测来测去19：Enable DPDK i40e vector rx function","link":"https://decodezp.github.io/2019/09/04/test19-enable-dpdk-i40e-vector-rx-function/","description":"Vector Rx Function在DPDK i40e网卡的驱动中提供有利用向量指令收包的方法，在一般场景下可以大幅提升性能。当针对基于DPDK的应用做性能诊断时可以用perf top命令直观观察有没有i40e_recv_pkts_vec这个方法出现，如果没有则可以判定当前的应用没有使用向量指令集优化过的收/发包方法。","pubDate":"Wed, 04 Sep 2019 11:22:57 GMT","guid":"https://decodezp.github.io/2019/09/04/test19-enable-dpdk-i40e-vector-rx-function/","category":"tech"},{"title":"Quickwords33:How uprobe works","link":"https://decodezp.github.io/2019/08/25/quickwords33-how-uprobe-work/","description":"背景用uprobe也有一段时间了，确实是一个很有价值的工具。我这个人有个特点，就是如果不知道这件事背后的原理，即便工具很好用，但用起来始终心里不踏实，像是房本上没加名字，住着没有安全感。对于uprobe这么fancy的工具还是很有必要了解一下具体的工作机制。一方面是打消“神秘感”，一方面是看看是否能激发别的灵感。","pubDate":"Sun, 25 Aug 2019 14:07:45 GMT","guid":"https://decodezp.github.io/2019/08/25/quickwords33-how-uprobe-work/","category":"tech"},{"title":"十八岁这天的日记","link":"https://decodezp.github.io/2019/08/11/diary-on-18th-b-day/","description":"上中学的时候，按历任语文老师的要求，写过好几本日记。这里面有一本是最不一样的，因为高三了，语文老师可能也认为“写日记”这个事确实太闲情逸致了一些，所以不再像以前一样要求上交日记本批改。我因此也得以在上面写了一些真正的日记。","pubDate":"Sun, 11 Aug 2019 08:48:30 GMT","guid":"https://decodezp.github.io/2019/08/11/diary-on-18th-b-day/","category":"thoughts"},{"title":"几句话说清楚32：Git命令极简使用指南","link":"https://decodezp.github.io/2019/08/09/quickwords32-simplest-git-manual/","description":"基本上可以Cover 90%以上的工作场景。 要开始在现有Master上搞点什么确保你在master分支上git checkout master","pubDate":"Fri, 09 Aug 2019 13:23:45 GMT","guid":"https://decodezp.github.io/2019/08/09/quickwords32-simplest-git-manual/","category":"tech"},{"title":"测来测去18：使用LD_PRELOAD搞砸一切","link":"https://decodezp.github.io/2019/08/09/test18-ld-preload-mess-up/","description":"LD_PRELOADLD_PRELOAD是一个神奇的指令，关于它的介绍可以参考这篇文章，这篇文章。","pubDate":"Thu, 08 Aug 2019 21:19:53 GMT","guid":"https://decodezp.github.io/2019/08/09/test18-ld-preload-mess-up/","category":"tech"},{"title":"测来测去17：Adding dynamic probe to gain insight of DPDK application","link":"https://decodezp.github.io/2019/08/07/test17-dyn-probe-dpdk/","description":"Dynamic Trace Framework曾经想给DPDK添加一个trace framework，但使用的方法是添加一个专门的rte_trace库，涉及一整套trace buffer和控制相关的操作，同时需要修改原本DPDK应用的代码，使用起来成本还是比较高的。在逐渐熟悉了uprobe的操作之后，其实可以用uprobe完成绝大部分这个trace framework所做的工作，例如方法执行时间戳、方法参数、返回值、内部变量值的记录工作，并且有性能开销方面的保障。","pubDate":"Wed, 07 Aug 2019 11:00:53 GMT","guid":"https://decodezp.github.io/2019/08/07/test17-dyn-probe-dpdk/","category":"tech"},{"title":"测来测去16：Adding new kprobe to ftrace tracing","link":"https://decodezp.github.io/2019/07/19/test16-adding-new-kprobe/","description":"添加ftrace新事件Ftrace自己带很多事件，之前一直以为在内核方面ftrace的触角就到此为止了。今天才了解到kprobe也可以像uprobe一样自己动态定义一个出来。这样默认的ftrace没有的事件也就可以通过添加新kprobe事件的方式添加了。","pubDate":"Fri, 19 Jul 2019 12:29:10 GMT","guid":"https://decodezp.github.io/2019/07/19/test16-adding-new-kprobe/","category":"tech"},{"title":"测来测去15：DPDK VxLAN Inner L4 CSUM OFFLOAD","link":"https://decodezp.github.io/2019/07/16/test15-dpdk-vxlan-csum-offload/","description":"IXGBE以IXGBE驱动为例，看一下如何让把内层报文Checksum的计算Offload给网卡。 本质上来说，是在DPDK的mbuf结构中，将L2 Header的长度配置为外层VxLAN报文+内层L2 Header的总长度，这样对网卡来说，该mbuf对应的报文就是一个L2 Header长得令人发指的普通非隧道报文，但是这样就可以计算内层L3/L4 Header的Checksum了。","pubDate":"Tue, 16 Jul 2019 11:08:19 GMT","guid":"https://decodezp.github.io/2019/07/16/test15-dpdk-vxlan-csum-offload/","category":"test"},{"title":"Quickwords31：What Is Inclusive and Exclusive Cache","link":"https://decodezp.github.io/2019/07/08/quickwords31-inclusive-exclusive-cache/","description":"一般对Cache的认知方式我们比较熟悉的对Cache的理解是，首先有3级，L1，L2和L3。这三级依次远离CPU核心，查询数据的速度也依次减慢。当CPU需要一个地址上的数据时，会先去L1查找；当L1没有这个数据的时候，去L2查找；L2也没有的时候，去L3查找。如果还没有，就去内存上去查找。这是我们看待Cache和CPU查询数据时的一般方式。","pubDate":"Mon, 08 Jul 2019 13:10:13 GMT","guid":"https://decodezp.github.io/2019/07/08/quickwords31-inclusive-exclusive-cache/","category":"tech"},{"title":"应许之日","link":"https://decodezp.github.io/2019/06/24/promised-date/","description":"很庆幸自己能活这么久，站在此时此刻的人生节点上，可以闻到更好的时光还在后面。","pubDate":"Mon, 24 Jun 2019 14:05:19 GMT","guid":"https://decodezp.github.io/2019/06/24/promised-date/","category":"thoughts"},{"title":"5分钟经典英文技术演讲3：如何应对信息过载并提高生产效率-Scott Hanselman","link":"https://decodezp.github.io/2019/06/19/eng-talk3-scaling-yourself/","description":"一个人的能力上限很大程度上取决于他获取信息的能力。 而能力增长的速度与获取信息的质量正相关。 不可否认，大量优质的技术内容都基于英文。“5分钟经典英文技术演讲”专门撷取国外最有价值的纯英文技术演讲，以最精炼的形式将信息传达给国内的技术同侪，绕过网络政策和语言的障碍，实现中西方技术世界无壁垒的信息同步。 最新内容将发布于DecodeZ: decodezp.github.io 往期回顾1：如何快速掌握新技术往期回顾2：软件设计真正的精髓 GOTO2012: Scaling Yourself原视频 摘要：信息过载的时代，能否找到一种在信息洪流中独善其身的方法，让我们专注于真正重要事情？当生活/工作的范畴一再扩大，我们也需要延展自身的边界，在充分利用信息的同时，保持持续的生产效率。","pubDate":"Wed, 19 Jun 2019 12:04:22 GMT","guid":"https://decodezp.github.io/2019/06/19/eng-talk3-scaling-yourself/","category":"ENG_talk"},{"title":"Quickwords30：Use Both kprobe and uprobe At The Same Time","link":"https://decodezp.github.io/2019/06/18/quickwords30-kprobe-uprobe-both/","description":"用ftrace可以观察内核方法的调用信息。用uprobe可以观察用户空间二进制可执行文件中方法的调用信息。奇怪的是当你想把两个合在一起用的时候，比如你想看到内核调度器调度到了你关心的用户进程，同时也想知道调度之后，该进程会执行哪个方法的时候，网络上我没有找到任何资料教你如何去做。按说这应该是一个对各类系统问题诊断很有用的能力。 也许是太简单了？下面用一个示例说明。 内核版本12uname -r4.19.6-1.el7.elrepo.x86_64 有点新，不过不害事。","pubDate":"Tue, 18 Jun 2019 13:37:51 GMT","guid":"https://decodezp.github.io/2019/06/18/quickwords30-kprobe-uprobe-both/","category":"tech"},{"title":"Quickwords29：AMD ZEN 2 Microarchitecture Overview","link":"https://decodezp.github.io/2019/06/12/quickwords29-amd-zen2-microarch/","description":"AMD ZEN 2在消费者和服务器市场AMD推出了全新的基于ZEN 2微架构的处理器，包括Ryzen 3000系列和EPYC系列。在市场宣传方面均给出了高于Intel竞品处理器的性能。我这里还没有拿到实际的产品进行性能测试，但可以先从公开的微架构设计的角度看一看AMD这款新产品的大体思路。 Microarchitecture Overview 上图是ZEN 2产品的微架构示意图。从微架构的“架构”设计上，感觉业界基本上遵从了同一套模式，很难有创新和突破。均是基于以下三个部分：","pubDate":"Tue, 11 Jun 2019 21:59:06 GMT","guid":"https://decodezp.github.io/2019/06/12/quickwords29-amd-zen2-microarch/","category":"tech"},{"title":"拔智齿","link":"https://decodezp.github.io/2019/06/05/tooth-extraction/","description":"拔智齿是一个磨人的过程。真正拔的时候其实还好，但决定去拔之前，要做很多心理建设工作。尤其是对牙一直很好的人来说，去拔牙就仿佛承认了之前对牙齿的乐观和与之俱来的优越感都只是一场幻觉。","pubDate":"Wed, 05 Jun 2019 12:02:29 GMT","guid":"https://decodezp.github.io/2019/06/05/tooth-extraction/","category":"life"},{"title":"Gartner预测误差统计","link":"https://decodezp.github.io/2019/06/03/gartner-prediction/","description":"Gartner的预测Gartner表面上是一家咨询公司，实际上是一家市场公关公司。不仅通过一些市场工具给厂商打广告，还直接给某样技术打广告，当然也兼做一些资源对接的中介服务。至于Gartner的分析报告，即便每年需要几十万的“咨询费”才能阅读，但我是从来没有完整看完过其中任何一篇，因为他们报告的题目都拟得非常好——非常精炼，也非常准确——所以有时候看完题目就好了。 每当Gartner新公布了一项市场数字和指标之后，都会被各家媒体和相关厂商疯狂引用，作为论证市场繁荣和增长预期的最有力论据。但年复一年，我们永远盯住的是“下一个丰收的年景”，却不怎么关心当下的市场是否曾被准确勾画。以往知来，我们就以年年火热的云计算市场为例，统计一下Gartner的历史预测准确率。","pubDate":"Mon, 03 Jun 2019 12:30:27 GMT","guid":"https://decodezp.github.io/2019/06/03/gartner-prediction/","category":"tech"},{"title":"测来测去14：Phoronix tinymembench结果不理想的可能原因","link":"https://decodezp.github.io/2019/05/28/test14-phoronix-tinymembench/","description":"Phoronix tinymembench这个测试经常用来衡量CPUmemcpy和memset这两个基本操作的性能。最近在执行针对两款CPU的性能测试中，发现某款相对”高端“的CPU在这两个测试中表现与相对“低端”的CPU相比，存在较大差距。","pubDate":"Tue, 28 May 2019 12:44:02 GMT","guid":"https://decodezp.github.io/2019/05/28/test14-phoronix-tinymembench/","category":"test"},{"title":"测来测去13：DPDK i40e X710 FDIR Flexbytes","link":"https://decodezp.github.io/2019/05/23/test13-dpdk-x710-flexload/","description":"Flex Bytes700系列网卡除了提取包头的字段作为散列的依据之外，还可以截取Payload的特定片段作为散列的依据。 Flexible payload是可以识别出的L2/L3/L4 Header之后的字节，最多可以截取来自于3个不同偏移（OFFSET）的16字节内容。所有的内容需要来自该报文前480字节内。","pubDate":"Thu, 23 May 2019 12:42:12 GMT","guid":"https://decodezp.github.io/2019/05/23/test13-dpdk-x710-flexload/","category":"test"},{"title":"统治者为什么会重复犯同样的错误","link":"https://decodezp.github.io/2019/05/22/thoughts9-identical-behavior/","description":"史书上对自己作死的亡国之君的描述基本上都是类似的。用查找替换把两个名字换一下，基本不影响阅读体验。 奇怪的点就在于，从第二个亡国之君开始，为什么明明知道已有“亡国之兆”，却仍然不加收敛？","pubDate":"Wed, 22 May 2019 12:22:22 GMT","guid":"https://decodezp.github.io/2019/05/22/thoughts9-identical-behavior/","category":"thoughts"},{"title":"Quickwords28：Skylake Microarchitecture(11)","link":"https://decodezp.github.io/2019/05/18/quickwords28-skylake-pipeline-11/","description":"Store and Load ExampleGiven the initialized situation like this:","pubDate":"Sat, 18 May 2019 07:48:31 GMT","guid":"https://decodezp.github.io/2019/05/18/quickwords28-skylake-pipeline-11/","category":"tech"},{"title":"测来测去12：DPDK i40e X710 Flow Director Deep Dive(3)","link":"https://decodezp.github.io/2019/05/14/test12-dpdk-x710-fdir-mask-3/","description":"多于两个input_set的mask先说结论，一个pctype可以设置多个input_set，但是最多仅能给两个input_set设置mask。","pubDate":"Tue, 14 May 2019 11:02:43 GMT","guid":"https://decodezp.github.io/2019/05/14/test12-dpdk-x710-fdir-mask-3/","category":"test"},{"title":"测来测去11：DPDK i40e X710 Flow Director Deep Dive(2)","link":"https://decodezp.github.io/2019/05/13/test11-dpdk-x710-fdir-mask-2/","description":"同时添加一个TCP Flow Director规则在上一篇文章的基础上，添加一个TCP相关的Fdir操作：","pubDate":"Mon, 13 May 2019 10:46:49 GMT","guid":"https://decodezp.github.io/2019/05/13/test11-dpdk-x710-fdir-mask-2/","category":"test"}]}