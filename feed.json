{"title":"DecodeZ","description":"刚日读经，柔日读史","language":null,"link":"https://decodezp.github.io","pubDate":"Fri, 07 Dec 2018 22:26:24 GMT","lastBuildDate":"Fri, 07 Dec 2018 22:33:28 GMT","generator":"hexo-generator-json-feed","webMaster":"Pan Zhang","items":[{"title":"产品观察1：华为FabricInsight产品简要分析","link":"https://decodezp.github.io/2018/12/08/product1-huawei-fabricinsight/","description":"123最近机缘巧合之下接触到了华为FabricInsight这款产品，简要谈谈看法。只针对2018年8月份左右发布的版本。另外注意，在Google搜索相关资料的时候，记得要把Fabric Insight这两个单词合并在一起搜索，中间不要加空格，别问我怎么知道的。 概述信息采集SNMP在使用Fabric Insight之前需要配置华为设备的SNMP协议，主要作用为获取设备的MIB信息，并进行其他管理操作。 LLDP使能各设备的LLDP功能，以便FabricInsight据此（以及通过SNMP上送的MIB信息）绘制硬件连接拓扑图。 NetConf使能各设备的NetConf配置，以便FabricInsight能通过NetConf协议配置各设备的ERSPAN功能。 ERSPAN配置ERSPAN功能，destination IP配置为FabricInsight collector的地址。底层实现为：通过GRE隧道的方式将远程设备的流量路由/镜像至分析节点，以实现对流量可视化分析。ERSPAN可配置筛选特定的流量，并非全量镜像。从华为对交换机的配置： [~Device] observe-port 1 ​ destination-ip 10.10.10.20 ​ source-ip 10.1.1.1 [*Device] traffic-mirroring vxlan tag-format none tcp-flag fin syn rst observe-port 1 inbound [*Device] traffic-mirroring tcp-flag fin syn rst observe-port 1 inbound [*Device] commit 通过ERSPAN镜像给Fabric Insight的流量包括带有FIN/SYN/RST等TCP flag的网包。对应其产品中对TCP事件的可视化能力。注*：据此可以看出Fabric Insight没有全量流量镜像&amp;分析能力注*：命令中的vxlan可能是将流量通过vxlan封装，做三层转发，而非镜像全部vxlan流量 Telemetry华为的Telemetry指设备主动、以固定周期上报的一些设备信息，包括CPU\\MEM\\QUEUE等信息。 手动录入主要为用户业务信息，每一个业务的定义为一组IP和某一固定端口号的集合，需要用户手工录入。 功能分类Underlay拓扑可视化依据LLDP生成及SNMP上报的信息，可生成Underlay设备间的拓扑信息。流量事件统计依据ERSPAN镜像的含有SYN\\FIN\\RST等flag的TCP网包，可统计一条流（五元组）中的事件发生次数、时间及类型。并可据此进行简单的SYN重传、建立连接RTT、建连成功率分析。但缺少对网流完整过程（e.g.流量传输数据总量、pps、整体平均时延等）的统计和分析。 设备信息统计根据Telemetry信息给出CPU\\MEM等设备运行状态统计信息，以及对各网络端口IN/OUT总量、drop、error数量等的统计信息。 应用流量分类过滤其应用功能，本质为手动设置IP+端口号过滤规则，通过过滤的流量即为一个应用。应用间的流量状态展现，即为在流量事件统计数据库中分别为起止两端的流量配置两个应用的过滤规则，筛选出的流量即可作为应用间的流量状态展示。 Fabric Insight特点强绑定性只能用于华为的硬件设备。并且后期会形成双向绑定，如若依赖FabricInsight，扩容时只能继续采购华为设备。 基于流量事件对于流的分析仅涉及五元组和TCP流量事件。可依据SYN、FIN、RST等TCP流量事件完成TCP SYN重传、RST等事件的侦测，并作为报警依据。 无流量全量分析当前观察，仅有TCP流量的事件信息，对UDP、ICMP、ARP等网络流量无采集分析能力。仅针对TCP流量，亦无流量全量分析能力，无法获取诸如流量总字节数、总包数、pps、平均时延、最大时延等信息。 Overlay能力暂无当前FabricInsight宣称的可分析虚拟网络是指，手工指定某一虚拟网元（Virtual NE）IP地址，手工指定其角色（e.g. FW\\LB\\Router）其与外界通讯的流量可以以与Underlay网络相同的方式采集。未发现针对虚拟网络VM间的采集分析能力。从其官方手册中针对ERSPAN的配置来看，可能或未来会具有一定的VXLAN隧道解封装及关联对应能力。但即便如此，在大规模网络流量的情况下，对全部VXLAN流量分析亦将为设备带来压力。另外，主机内的虚拟网络流量，FabricInsight以现在的形式是绝对无法取得的。 Fabric Insight未来演进趋势推测In-band TelemetryFabric Insight的数据采集能力全部来自于设备提供的能力。在设备/芯片领域的发展趋势是提供更加精细化的In-band Telemetry遥测能力。从Cisco/Barefoot等厂商近期对P4芯片的动态来看，华为跟风也是早晚的事。In-band Telemetry可以提供诸如per packet的全生命周期、匹配的具体转发规则、更加精细的时间戳等能力。但如若采用新的芯片组提供In-band Telemetry，则会仅支持新款产品。除此之外，也将不仅仅将流量分析的范畴局限于TCP流量。 虚拟网络虚拟网络是行业演进的趋势，但需要考虑华为对FabricInsight这款产品本身的定位。如果添加虚拟网络能力，则其品牌名称、目标人群都将会有较大调整。但华为整体上缺乏虚拟网络可视化的产品和能力，因此推断会先对接华为自己的云平台FusionCloud，计算节点绑定探针。但先期仍会仅采用TCP流量事件的分析模式，不会全量采集和分析。 AIopsAI的概念在当前版本的Fabric Insight中已有所体现，但当前仅是一些标准差方差的统计计算。演进的方式将是对网络中断和延迟的诊断以及自调优的赋能。但这种分析首先要求用户能够输入一定的专家经验作为数据训练的标记，同时对分析节点的部署要求较高（支持大数据分布式计算和存储）。 安全防御这是当前看起来最有实际效能的功能。其本身具有的TCP事件分析能力完全可以用来完成DDoS攻击的侦测和防御。","pubDate":"Fri, 07 Dec 2018 22:26:24 GMT","guid":"https://decodezp.github.io/2018/12/08/product1-huawei-fabricinsight/","category":"tech,product"},{"title":"可以预测交通路况的 APP","link":"https://decodezp.github.io/2018/12/06/life-traffic-prediction/","description":"能不能有这样一款应用","pubDate":"Thu, 06 Dec 2018 06:41:18 GMT","guid":"https://decodezp.github.io/2018/12/06/life-traffic-prediction/","category":"life"},{"title":"测来测去2：CPU缓存读入策略","link":"https://decodezp.github.io/2018/12/06/test2-cache-line-alignment/","description":"到底哪些数据写入了CPU缓存我们知道CPU会在要读写某个数据时，先将数据写入缓存。 我们也知道这个操作一般以Cache Line为操作粒度，并且Cache Line的长度一般为64Byte。","pubDate":"Thu, 06 Dec 2018 06:18:31 GMT","guid":"https://decodezp.github.io/2018/12/06/test2-cache-line-alignment/","category":"test"},{"title":"魏孝文帝教你提proposal","link":"https://decodezp.github.io/2018/12/05/history-tuobahong/","description":"艰难的Proposal每个人都有独自一人面对全世界的时候，即便你是魏孝文帝拓跋宏。 北魏太和十七年，承平日久的北魏都城里正在酝酿一件大事——迁都。","pubDate":"Wed, 05 Dec 2018 07:09:12 GMT","guid":"https://decodezp.github.io/2018/12/05/history-tuobahong/","category":"history"},{"title":"ftrace uprobe使用填坑历程","link":"https://decodezp.github.io/2018/12/04/ftrace-uprobe/","description":"准备打算用一下ftrace对用户态程序的trace支持。 测试用程序test.c：","pubDate":"Tue, 04 Dec 2018 04:25:59 GMT","guid":"https://decodezp.github.io/2018/12/04/ftrace-uprobe/","category":"tech"},{"title":"ftrace trace-cmd kernelshark资料汇总","link":"https://decodezp.github.io/2018/11/30/ftrace/","description":"一些关于这一类技术的资料和文档汇总。文章中可以找到比较详细的工具使用方法。如果想了解更多内容可以阅读linux/Documentation/trace下的文档以及源码。 以及git log ./kernel/trace :)","pubDate":"Fri, 30 Nov 2018 06:22:55 GMT","guid":"https://decodezp.github.io/2018/11/30/ftrace/","category":"tech,linux"},{"title":"测来测去1：DPDK no-huge模式性能对比测试","link":"https://decodezp.github.io/2018/11/29/test1-dpdk-no-huge/","description":"no-hugeDPDK使用大页内存作为性能优化的一个手段。但大页内存在云计算等环境下可能会出现内存资源浪费的情况，作为售卖资源的云服务商，希望能找到更充分的内存资源利用的方法。在此背景下，DPDK引入了no-huge机制，即不使用hugepage，从而解放更多的系统资源。 那么这种配置下DPDK性能会下降多少呢？还是需要实际定量测试一下。","pubDate":"Thu, 29 Nov 2018 05:20:58 GMT","guid":"https://decodezp.github.io/2018/11/29/test1-dpdk-no-huge/","category":"test"},{"title":"云计算的发展需要向社区街道管理看齐","link":"https://decodezp.github.io/2018/11/28/thoughts1-cloud-community/","description":"服务云计算本质上是一种服务。由各种不同的组件为租户提供计算、网络和存储服务。 用户对这些服务的要求除了功能之外，还有安全性、可用性、性能、成本、迁移难度、SLA等一系列要求。 与之类比，社区街道作为一个完整的功能单元，各个基层职能部门，也为社区内的居民提供各类生活服务。 如何做好基层工作，是需要费一番脑筋的。","pubDate":"Wed, 28 Nov 2018 05:47:57 GMT","guid":"https://decodezp.github.io/2018/11/28/thoughts1-cloud-community/","category":"thoughts"},{"title":"几句话说清楚3:什么是False Sharing","link":"https://decodezp.github.io/2018/11/27/quickwords3-falsesharing/","description":"不用图以为又要见到那几张网上已经用烂了的图了是不是？这次我们不用图来讲这个事。","pubDate":"Tue, 27 Nov 2018 05:12:54 GMT","guid":"https://decodezp.github.io/2018/11/27/quickwords3-falsesharing/","category":"tech,quickwords"},{"title":"几句话说清楚2:CPU缓存的组织形式","link":"https://decodezp.github.io/2018/11/25/quickwords2-cacheassociativity/","description":"缓存缓存和其他存储形式在功能形式上没有太大区别，均是输入一个地址，还你一个数据。但作为一个缓存，要考虑如何在有限的容量下保证较高的命中率以及查找效率(相关阅读)。这个问题从本质上来说，就是如何建立缓存地址与内存地址的映射关系。","pubDate":"Sun, 25 Nov 2018 07:18:27 GMT","guid":"https://decodezp.github.io/2018/11/25/quickwords2-cacheassociativity/","category":"tech,quickwords"},{"title":"XXV710网卡Target Link Speed探秘","link":"https://decodezp.github.io/2018/11/23/x710-target-link-speed/","description":"发现用lspci指令查看PCIe设备，特别是网卡设备经常会查看LnkCap及LnkSta字段，以确保网卡运行在期望的PCIe总线类型/带宽上，从而保证网卡的性能。 最近拿到一块XXV710-DA2，插上之后简单看了一下状态。LnkCap和LnkSta均显示为Speed 8GT/s，Width x8，没太大问题。这时候无意中瞥见LnkCtl2中Target Link Speed显示为2.5GT/s，引发了兴趣。","pubDate":"Fri, 23 Nov 2018 11:26:48 GMT","guid":"https://decodezp.github.io/2018/11/23/x710-target-link-speed/","category":"tech"},{"title":"程序员和工厂劳工有何不同","link":"https://decodezp.github.io/2018/11/22/programmer-worker/","description":"如今流行的一个说法是，现在的程序员与工业时期的工厂工人并无二致。均是富集于人口密集的城市、均是超时劳动、均是遭受资本家的盘剥、均是一架大机器上的螺丝钉，在超过“劳动年龄”之后被弃如敝屣。基于这些相似点，有些人得出结论，程序员不过是这个时代的“无产阶级”，和以前的流水线工人，纺织厂女工属于同一社会分工和定位。是否当真如此，这个问题值得仔细推敲一下。","pubDate":"Thu, 22 Nov 2018 12:54:07 GMT","guid":"https://decodezp.github.io/2018/11/22/programmer-worker/","category":"thoughts"},{"title":"几句话说清楚1:为什么CPU L1缓存容量始终很小","link":"https://decodezp.github.io/2018/11/20/cachesize/","description":"问题CPU缓存是影响软件性能的关键因素之一。在做性能调优时，经常关注的一个指标就是缓存的命中率(hit rate)。缓存之所以不会达到100%的命中率，是因为缓存容量有限，不能将内存中的全部数据都同时放入其中。只能将当前最热，相邻最近的数据存入，同时还受多核CPU中缓存同步机制的影响。奇怪的是，CPU的制程、晶体管数量、核心数量一直都在增加，但L1缓存的容量始终维持在一个相当低的水平。为什么不加大L1缓存呢？","pubDate":"Tue, 20 Nov 2018 11:45:45 GMT","guid":"https://decodezp.github.io/2018/11/20/cachesize/","category":"tech,quickwords"},{"title":"top命令使用方法补遗","link":"https://decodezp.github.io/2018/11/19/topcmd/","description":"更改界面刷新频率 自动刷新 topd输入刷新时间（默认3秒，可调至0.5） 手动刷新空格","pubDate":"Mon, 19 Nov 2018 13:25:58 GMT","guid":"https://decodezp.github.io/2018/11/19/topcmd/","category":"tech"},{"title":"刚日读经，柔日读史","link":"https://decodezp.github.io/2018/11/18/gangrirouri/","description":"在不知道什么时候，我们似乎被灌输了一种互补好，什么都是互补好的认知。资源要互补，团队要互补，思想要互补，连看个书也得掐着日子互补。","pubDate":"Sun, 18 Nov 2018 11:27:23 GMT","guid":"https://decodezp.github.io/2018/11/18/gangrirouri/","category":"thoughts"},{"title":"如何在偷偷搜索关键字后避免令人尴尬的广告","link":"https://decodezp.github.io/2018/11/17/duckduckgo/","description":"转载自cloudwonders.info 当你在任意一个搜索引擎输入一个关键词之后，你就成了全网全平台追逐的流量热点。 平时大打口水战的各大平台在共享你的隐私数据方面异常团结，在B系网站搜索，在A系T系的应用APP上都会看到为你“量身定制”的推送和广告，延迟不超过一分钟。","pubDate":"Sat, 17 Nov 2018 13:13:36 GMT","guid":"https://decodezp.github.io/2018/11/17/duckduckgo/","category":"wonder"}]}