{"title":"DecodeZ","description":"刚日读经，柔日读史","language":null,"link":"https://decodezp.github.io","pubDate":"Sun, 03 Feb 2019 07:42:55 GMT","lastBuildDate":"Thu, 14 Feb 2019 11:37:38 GMT","generator":"hexo-generator-json-feed","webMaster":"Pan Zhang","items":[{"title":"几句话说清楚14：Skylake微架构(Microarchitecture)剖析(5)","link":"https://decodezp.github.io/2019/02/03/quickwords14-skylake-pipeline-5/","description":"Instruction Decode Queue(IDQ)IDQ也叫Allocation Queue(AQ)，也有时候会写成是Decode Queue。解码完成的uops在进入后端之前需要先在IDQ中做一下缓冲。作为一个”缓冲队列”，主要作用是将前端解码可能引入的流水线”气泡(bubbles)“消化掉，为后端提供稳定的uops供应(目标是6uop/cycle)。","pubDate":"Sun, 03 Feb 2019 07:42:55 GMT","guid":"https://decodezp.github.io/2019/02/03/quickwords14-skylake-pipeline-5/","category":"tech"},{"title":"程序员学英语的几点实用经验","link":"https://decodezp.github.io/2019/01/31/how-to-learn-english/","description":"学习英语当然要靠不断的练习，但同样的练习时间往往效果却大相径庭。以下是我结合自己的经历总结的一些经验和方法，希望能帮助大家提高学习英语的效率。 Rubbish in, rubbish out把自己想象成一个处理英文的黑盒，输入就是听读，输出就是说写。和人工智能训练模型需要优质的标签数据一样，学习英语也需要优质的输入才能达到良好的学习效果。 在程序员的领域，最直接的优质的英文材料就是经典的英文原版技术书籍。编写这些书籍的大师不但是技术领域的巨擘，同时也是操纵语言的大师，他们的书籍往往最是简洁明快，逻辑清晰。","pubDate":"Thu, 31 Jan 2019 12:47:03 GMT","guid":"https://decodezp.github.io/2019/01/31/how-to-learn-english/","category":""},{"title":"几句话说清楚13：什么是Top-Down性能分析方法","link":"https://decodezp.github.io/2019/01/27/quickwords13-tma/","description":"目的前几篇连续介绍了一些Skylake微架构的内容（还没有结束，还会继续填坑），主要目的并不是要对读者开启名词或者概念的Flood攻击，而是为了方便读者以后可以“有理有据”地进行软件的性能优化。","pubDate":"Sun, 27 Jan 2019 13:17:45 GMT","guid":"https://decodezp.github.io/2019/01/27/quickwords13-tma/","category":"tech"},{"title":"测来测去6：Linux网络性能调优方法（补遗）","link":"https://decodezp.github.io/2019/01/24/test6-linux-network-performance-optimization-2/","description":"没提到的上一篇内容中介绍了一些Linux网络协议栈的调优方法，但遗漏了一些可以发挥重要作用的方法，在这一篇中补充一下。","pubDate":"Thu, 24 Jan 2019 10:35:31 GMT","guid":"https://decodezp.github.io/2019/01/24/test6-linux-network-performance-optimization-2/","category":"test"},{"title":"测来测去5：Linux网络性能调优方法","link":"https://decodezp.github.io/2019/01/22/test5-linux-network-performance-optimization/","description":"换换口味老搞DPDK的人有一个毛病就是怎么也看不上内核网络，又是中断又是拷贝的，实在没有一脚地板油CPU直接100%炸街来得爽快。另外作为一个软件性能优化的“硬核”玩家，是很看不上内核这种改改参数，调调设置的玩法的。不过…既然自己主动跳了个大坑，该调内核性能的时候还是要调的…所以今天就换换口味，看看在Linux下通过配置调优网络性能怎么搞。","pubDate":"Tue, 22 Jan 2019 13:06:06 GMT","guid":"https://decodezp.github.io/2019/01/22/test5-linux-network-performance-optimization/","category":"test"},{"title":"几句话说清楚12：Skylake微架构(Microarchitecture)剖析(4)","link":"https://decodezp.github.io/2019/01/20/quickwords12-skylake-pipeline-4/","description":"MSROM MSROM(Micro-code sequencer ROM)就是在上一篇连载中提到的专门处理输出大于4个uop的那块类似缓存的ROM。很多文档里面也直接将其称为MS，具体叫什么多需要结合上下文语境，知道是一回事就好了。 我个人其实推荐读者在编写自己的文档时能注意这些名称上的“一致性”，同编写程序时给变量或函数命名时的一致性一样，这些看似没什么“技术含量”的工作，却能够极大地提高信息传达的效率，也就是提高文档或代码的可读性和可维护性。","pubDate":"Sun, 20 Jan 2019 05:37:25 GMT","guid":"https://decodezp.github.io/2019/01/20/quickwords12-skylake-pipeline-4/","category":"tech"},{"title":"有时做梦","link":"https://decodezp.github.io/2019/01/19/thoughts4-dream/","description":"活得年头多起来之后，很难再明确地忆起某件事发生在哪一年。时间变得不再激烈，但往事却在交织纠缠，许多不可能的事还以为理所当然，而那些早已发生的事实却总需要确认再三。","pubDate":"Sat, 19 Jan 2019 06:08:32 GMT","guid":"https://decodezp.github.io/2019/01/19/thoughts4-dream/","category":"thoughts"},{"title":"在OpenWRT中添加perf工具","link":"https://decodezp.github.io/2019/01/15/openwrt-perf/","description":"OpenWRT性能调优的必要如果仅仅是家庭网关，确实没太大必要，毕竟网络的瓶颈主要在运营商的出口那。OpenWRT之所以开始关注极致的性能，是由于OpenWRT的应用场景出现了变化。从SD-WAN和边缘计算概念，到混合云与智能网关，都催生出了在边缘接入侧uCPE或其他类似的小盒子中部署基于OpenWRT系统的必要。不同于满足家庭接入的需求，这些小盒子往往对应一间Office或公司分支的网络需求。增长的网络带宽和对安全性、QoS等能力的要求都对OpenWRT的性能提出了更高的要求。","pubDate":"Tue, 15 Jan 2019 14:08:39 GMT","guid":"https://decodezp.github.io/2019/01/15/openwrt-perf/","category":"tech"},{"title":"王朝兴亡周期律的本因","link":"https://decodezp.github.io/2019/01/13/thoughts3-zhouqilv/","description":"王朝兴亡周期律 六位参政员将要回重庆时，毛泽东问黄炎培有什么感想，黄炎培坦率地说：“我生六十多年，耳闻的不说，所亲眼看到的，真所谓‘其兴也勃焉’，‘其亡也忽焉’，一人，一家，一团体，一地方，乃至一国，不少单位都没有跳出这周期率的支配力。大凡初时聚精会神，没有一事不用心，没有一人不卖力，也许那时艰难困苦，只有从万死中觅取一生。既而环境渐渐好转了，精神也就渐渐放下了。有的因为历史长久，自然地惰性发作，由少数演变为多数，到风气养成，虽有大力，无法扭转，并且无法补救。也有为了区域一步步扩大，它的扩大，有的出于自然发展，有的为功业欲所驱使，强求发展，到干部人才渐见竭蹶、艰于应付的时候，环境倒越加复杂起来了，控制力不免趋于薄弱了。一部历史‘政怠宦成’的也有，‘人亡政息’的也有，‘求荣取辱’的也有。总之没有能跳出这周期率。中共诸君从过去到现在，我略略了解的了。就是希望找出一条新路，来跳出这周期率的支配。”","pubDate":"Sun, 13 Jan 2019 15:50:04 GMT","guid":"https://decodezp.github.io/2019/01/13/thoughts3-zhouqilv/","category":"thoughts"},{"title":"几句话说清楚11：Skylake微架构(Microarchitecture)剖析(3)","link":"https://decodezp.github.io/2019/01/12/quickwords11-skylake-pipeline-3/","description":"解码 在拿到了经过“预解码”的macro-ops之后，开始正式进入解码过程。marco-ops进入Instruction Decode组件解码，最终的输出为定长的micro-ops。 Insturction Decode组件也有入口带宽限制，每个Cycle最多取3个unfused指令+2个fused指令，或者5个unfused指令（这里指macro ops）。所以说fused多了也不好，一个cycle最多取两个。同时如果开了Hyper Thread，则两个Thread按Cycle交替使用Instruction Decode。","pubDate":"Sat, 12 Jan 2019 04:50:46 GMT","guid":"https://decodezp.github.io/2019/01/12/quickwords11-skylake-pipeline-3/","category":"tech"},{"title":"几句话说清楚10：Skylake微架构(Microarchitecture)剖析(2)","link":"https://decodezp.github.io/2019/01/10/quickwords10-skylake-pipeline-2/","description":"前端处理器在前端这一部分的时候还是顺序(in-order)处理的，主要是也确实没什么乱序的空间。虽然说是顺序，但前端因为贴近业务，所以受人写的代码的影响也比较大。如果仅仅只是“取指令-&gt;解码”，恐怕需要写程序的人是个非常聪明的程序员。前端很多组件的工作其实都是在填程序员的坑，这也是我比较心疼前端的地方。","pubDate":"Thu, 10 Jan 2019 09:42:40 GMT","guid":"https://decodezp.github.io/2019/01/10/quickwords10-skylake-pipeline-2/","category":"tech"},{"title":"几句话说清楚9：Skylake微架构(Microarchitecture)剖析(1)","link":"https://decodezp.github.io/2019/01/07/quickwords9-skylake-pipeline-1/","description":"楔子了解CPU的微架构是基于其开发“硬核”软件的必需步骤。由于一些历史遗留问题，现存的技术资料往往存在一些概念混淆、重复命名甚至自相矛盾之处。本文一来梳理Skylake微架构(主要是流水线)的组成和特性，二来试图厘清一些含混的概念用以帮助后来者。 另外在介绍完微架构之后，会继续结合Perf中的Performance Event来对照说明互为印证。","pubDate":"Mon, 07 Jan 2019 15:52:11 GMT","guid":"https://decodezp.github.io/2019/01/07/quickwords9-skylake-pipeline-1/","category":"tech"},{"title":"汉光文帝教你如何提出领导无法拒绝的方案","link":"https://decodezp.github.io/2019/01/05/history2-liuyuan/","description":"在成为领导之前只有开国皇帝的孙子生下来就是皇帝，开国皇帝往往都给别人打过工。 别人给老板打工，不高兴了可以换个老板，而开国皇帝给老板打工，不想干了还必须得干掉老板。","pubDate":"Sat, 05 Jan 2019 06:24:48 GMT","guid":"https://decodezp.github.io/2019/01/05/history2-liuyuan/","category":"history"},{"title":"测来测去4：82599在DPDK下使用fdir","link":"https://decodezp.github.io/2019/01/04/test4-82599-fdir/","description":"文档过期近期有客户反馈82599的fdir(flow director)功能在DPDK环境下不生效，本想丢一个DPDK官网上的82599 fdir测试资料过去，但幸好我仔细看了一下测试流程，发现这个官方文档里使用的testpmd命令已经过期了(时间戳：Jan 3rd, 2019)….所以…我自己写一个吧。","pubDate":"Fri, 04 Jan 2019 05:09:54 GMT","guid":"https://decodezp.github.io/2019/01/04/test4-82599-fdir/","category":"test"},{"title":"唯识与C语言指针","link":"https://decodezp.github.io/2018/12/31/thoughts2-weishi-c-pointer/","description":"旧文虽无殊胜处却最解少年意，重发于此，乃自喜其披坚执锐行而无返之气。 作者按丙申孟春，始得熊君十力之微言宏旨，于《新唯识论》中得窥心外无物，体用不二，翕辟成变之理。数年兵、道、史、释之学，终为一脉贯通，于世间纷杂，万相罗织，始有定见。乃身蹈统摄之道，心得自在清凉，不免情动于衷，喜不自胜。 熊君为阐唯识之旨，于书中多举譬喻。举“海水与众沤”喻，“绳索与大麻”喻种种；更尝作图形，以穷其本旨，表其胜义，苦口婆心，令人动容，非沐手开卷不能彰其功，焚香斋戒不能铭其德。吾观乎此学，虽能以物物强为譬喻，然万物浩汤，皆为大化，果有以大化喻大化之理乎？终须另觅一人造之物，探幽寻明，见微知著，庶几可得于大化矣。今请试以指针喻之。 下面开始正常说话。","pubDate":"Sun, 30 Dec 2018 17:06:05 GMT","guid":"https://decodezp.github.io/2018/12/31/thoughts2-weishi-c-pointer/","category":"thoughts"},{"title":"吃牛排的技术","link":"https://decodezp.github.io/2018/12/28/steak/","description":"虽然不知道背后是什么原理，但烤出好吃的牛排一定是一门重要的技术。 因为重要的技术，门槛一般都很高。它的高不仅体现在如何掌握这门技术，还体现在如何使用这门技术。","pubDate":"Fri, 28 Dec 2018 09:35:26 GMT","guid":"https://decodezp.github.io/2018/12/28/steak/","category":"thoughts"},{"title":"测来测去3：抽象层直接调用实例方法性能提高百分之20","link":"https://decodezp.github.io/2018/12/27/test3-indirectcall/","description":"首先吐槽一下hexo标题不能以%结尾 -_-|| 抽象层经常，我们会在相对比较成熟的软件中见到这样一类结构体：","pubDate":"Thu, 27 Dec 2018 12:40:30 GMT","guid":"https://decodezp.github.io/2018/12/27/test3-indirectcall/","category":"test"},{"title":"几句话说清楚8：Intel 700系列网卡内部结构概览","link":"https://decodezp.github.io/2018/12/25/quickwords8-700-nic-arch/","description":"一不小心这个系列写到了第8期，原本打算写些别的东西，不过看到8这个数字就想到了Intel将要推出的800系列网卡…的小弟——命途多舛的700系列网卡。从目前市场(主要是云计算、互联网公司和数据中心)的情况看，700系列有逐渐推广的趋势，那么这一期就介绍一下700系列网卡的基本技术架构和特点吧。","pubDate":"Tue, 25 Dec 2018 09:17:39 GMT","guid":"https://decodezp.github.io/2018/12/25/quickwords8-700-nic-arch/","category":"tech"},{"title":"几句话说清楚7：DPDK不同CPU平台交叉编译指令不支持的问题","link":"https://decodezp.github.io/2018/12/24/quickwords7-dpdk-cross-compile/","description":"现象在比较高级的CPU平台(比如skylake)编译DPDK，会在编译的目标文件中加入一些高级指令集中的指令，比如AVX512。 如果运行最终可执行文件的机器的CPU架构(比如broadwell)不支持编译机器中的指令，则会在执行时报类似这种错误：","pubDate":"Mon, 24 Dec 2018 13:06:12 GMT","guid":"https://decodezp.github.io/2018/12/24/quickwords7-dpdk-cross-compile/","category":"tech,quickwords"},{"title":"5分钟经典英文技术演讲2：软件设计真正的精髓-Scott Meyer","link":"https://decodezp.github.io/2018/12/21/eng-talk2-things-matter/","description":"一个人的能力上限很大程度上取决于他获取信息的能力。 而能力增长的速度与获取信息的_质量_正相关。 不可否认，大量优质的技术内容都基于英文。“5分钟经典英文技术演讲”专门撷取国外最有价值的纯英文技术演讲，以最精炼的形式将信息传达给国内的技术同侪，绕过网络政策和语言的障碍，实现中西方技术世界无壁垒的信息同步。 最新内容将发布于DecodeZ: https://decodezp.github.io 往期回顾：如何快速掌握新技术 DConf2017：软件设计真正的精髓原视频 PPT/Slides下载 演讲者：Scott Meyer 上一张演讲者的照片，硬撸过C++的应该都很熟悉他: 摘要：成功的软件产品都有其共性。在Scott Meyer看来，这些共性由几个要素组成。在你的作品中考虑这些要素，将帮助你掌握软件设计真正的精髓。","pubDate":"Fri, 21 Dec 2018 13:07:58 GMT","guid":"https://decodezp.github.io/2018/12/21/eng-talk2-things-matter/","category":"ENG_talk"},{"title":"几句话说清楚6：什么是DDP(Dynamic Device Personalization)","link":"https://decodezp.github.io/2018/12/18/quickwords6-ddp/","description":"要解决的问题通过网卡的多队列和RSS将网包根据一些关键字段散列(hash)到不同的队列已成为一种主流的在x86平台开发信通以及云计算领域产品的方式。 在整体产品架构规划中，不同的网卡队列(Rx/Tx Queues)往往对应/绑定着不同的CPU核(Worker)，以利用资源隔离的方式提高性能。 传统的RSS，往往是依据header的五元组来做散列。通常，网卡可以识别出的报文类型包括ipv4-tcp|ipv4-udp|ipv4-other|ipv6-tcp|l2-payload等等，然后根据能识别出的类型进行关键字段的提取。 但现在如此简单的识别能力已经不能满足业务的需求。在复杂的协议和隧道通讯场景下，往往还需要识别隧道内层header甚至私有字段才能实现业务能力的最优化。","pubDate":"Tue, 18 Dec 2018 12:25:40 GMT","guid":"https://decodezp.github.io/2018/12/18/quickwords6-ddp/","category":"tech"},{"title":"谁不是在像CPU一样活着","link":"https://decodezp.github.io/2018/12/16/cpulized-life/","description":"上一次兴奋到浑身发热，还是把赛扬300A超频到450兆赫的时候。身体如摩尔定律般长高，觉得距离1GHz只差一罐液氮，心里装着只有一心一意才能装下的事情。 记得那时看到一篇报道，英特尔说“到2011年的时候，我们都能用上10GHz的电脑”。十几岁的你笑这家美国公司野心不大，现在你说出这件事，只是想给大家讲个笑话。","pubDate":"Sun, 16 Dec 2018 10:06:40 GMT","guid":"https://decodezp.github.io/2018/12/16/cpulized-life/","category":"thoughts"},{"title":"几句话说清楚5：影响服务器内存性能的硬件知识","link":"https://decodezp.github.io/2018/12/13/quickwords5-server-memory/","description":"发挥内存条理财的最大收益率内存条作为年度最佳理财产品除了能躺着赚钱之外，使用得好还可以一条当两条用。 在计算机系统中，内存的价值就体现在快速提供数据给CPU处理。当CPU需要的数据没有在缓存里时，CPU内部的Memory Controller就需要去内存中读取内容。","pubDate":"Thu, 13 Dec 2018 14:20:51 GMT","guid":"https://decodezp.github.io/2018/12/13/quickwords5-server-memory/","category":"tech,quickwords"},{"title":"5分钟经典英文技术演讲1：如何快速掌握新技术 - Kathy Sierra","link":"https://decodezp.github.io/2018/12/12/eng-talk1-fast-learn/","description":"一个人的能力上限很大程度上取决于他获取信息的能力。 而能力增长的速度与获取信息的质量正相关。 不可否认，大量优质的技术内容都基于英文。“5分钟经典英文技术演讲”专门撷取国外最有价值的纯英文技术演讲，以最精炼的形式将信息传达给国内的技术同侪，绕过网络政策和语言的障碍，实现中西方技术世界无壁垒的信息同步。 最新内容将发布于DecodeZ: decodezp.github.io Fluent: 如何快速掌握新技术原视频演讲者: Kathy Sierra 摘要：无论是谁，以有限的精力来面对层出不穷的新技术挑战都是不够的。你需要学会一套方法论来帮助你快速习得新的技能。而快速学习的秘诀却还不止这些…","pubDate":"Wed, 12 Dec 2018 14:51:14 GMT","guid":"https://decodezp.github.io/2018/12/12/eng-talk1-fast-learn/","category":"ENG_talk"},{"title":"几句话说清楚4：什么是Pointer Aliasing","link":"https://decodezp.github.io/2018/12/11/quickwords4-pointer-aliasing/","description":"指向同一地址的两个相同类型的指针aliasing本身是一个信号处理方面的概念。是指在信号采样过程中，不同的信号不再能相互区分的现象。 如下图所示的波纹现象，相对于拍摄的采样频率（横纵像素分辨率），墙砖缝隙变化的频率要大于采样频率。或者换句话说，多条墙砖缝隙需要挤在一个像素里面。","pubDate":"Tue, 11 Dec 2018 11:33:46 GMT","guid":"https://decodezp.github.io/2018/12/11/quickwords4-pointer-aliasing/","category":"tech,quickwords"}]}